# this is an auto generated file. This will be overwritten
mutation CreateUser(
  $input: CreateUserInput!
  $condition: ModelUserConditionInput
) {
  createUser(input: $input, condition: $condition) {
    id
    userName
    Residence {
      id
      rName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userResidenceId
  }
}
mutation UpdateUser(
  $input: UpdateUserInput!
  $condition: ModelUserConditionInput
) {
  updateUser(input: $input, condition: $condition) {
    id
    userName
    Residence {
      id
      rName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userResidenceId
  }
}
mutation DeleteUser(
  $input: DeleteUserInput!
  $condition: ModelUserConditionInput
) {
  deleteUser(input: $input, condition: $condition) {
    id
    userName
    Residence {
      id
      rName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userResidenceId
  }
}
mutation CreateResidence(
  $input: CreateResidenceInput!
  $condition: ModelResidenceConditionInput
) {
  createResidence(input: $input, condition: $condition) {
    id
    rName
    Places {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateResidence(
  $input: UpdateResidenceInput!
  $condition: ModelResidenceConditionInput
) {
  updateResidence(input: $input, condition: $condition) {
    id
    rName
    Places {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteResidence(
  $input: DeleteResidenceInput!
  $condition: ModelResidenceConditionInput
) {
  deleteResidence(input: $input, condition: $condition) {
    id
    rName
    Places {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreatePlace(
  $input: CreatePlaceInput!
  $condition: ModelPlaceConditionInput
) {
  createPlace(input: $input, condition: $condition) {
    id
    pName
    Containers {
      nextToken
      startedAt
    }
    residenceID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdatePlace(
  $input: UpdatePlaceInput!
  $condition: ModelPlaceConditionInput
) {
  updatePlace(input: $input, condition: $condition) {
    id
    pName
    Containers {
      nextToken
      startedAt
    }
    residenceID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeletePlace(
  $input: DeletePlaceInput!
  $condition: ModelPlaceConditionInput
) {
  deletePlace(input: $input, condition: $condition) {
    id
    pName
    Containers {
      nextToken
      startedAt
    }
    residenceID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateContainer(
  $input: CreateContainerInput!
  $condition: ModelContainerConditionInput
) {
  createContainer(input: $input, condition: $condition) {
    id
    cName
    Items {
      nextToken
      startedAt
    }
    placeID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateContainer(
  $input: UpdateContainerInput!
  $condition: ModelContainerConditionInput
) {
  updateContainer(input: $input, condition: $condition) {
    id
    cName
    Items {
      nextToken
      startedAt
    }
    placeID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteContainer(
  $input: DeleteContainerInput!
  $condition: ModelContainerConditionInput
) {
  deleteContainer(input: $input, condition: $condition) {
    id
    cName
    Items {
      nextToken
      startedAt
    }
    placeID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateItem(
  $input: CreateItemInput!
  $condition: ModelItemConditionInput
) {
  createItem(input: $input, condition: $condition) {
    id
    description
    iName
    photo
    containerID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateItem(
  $input: UpdateItemInput!
  $condition: ModelItemConditionInput
) {
  updateItem(input: $input, condition: $condition) {
    id
    description
    iName
    photo
    containerID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteItem(
  $input: DeleteItemInput!
  $condition: ModelItemConditionInput
) {
  deleteItem(input: $input, condition: $condition) {
    id
    description
    iName
    photo
    containerID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
