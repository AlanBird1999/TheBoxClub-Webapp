# this is an auto generated file. This will be overwritten
query GetUser($id: ID!) {
  getUser(id: $id) {
    id
    userName
    Residence {
      id
      rName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    userResidenceId
  }
}
query ListUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
) {
  listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      userName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userResidenceId
    }
    nextToken
    startedAt
  }
}
query SyncUsers(
  $filter: ModelUserFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncUsers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      userName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      userResidenceId
    }
    nextToken
    startedAt
  }
}
query GetResidence($id: ID!) {
  getResidence(id: $id) {
    id
    rName
    Places {
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListResidences(
  $filter: ModelResidenceFilterInput
  $limit: Int
  $nextToken: String
) {
  listResidences(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      rName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncResidences(
  $filter: ModelResidenceFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncResidences(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      rName
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetPlace($id: ID!) {
  getPlace(id: $id) {
    id
    pName
    Containers {
      nextToken
      startedAt
    }
    residenceID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListPlaces(
  $filter: ModelPlaceFilterInput
  $limit: Int
  $nextToken: String
) {
  listPlaces(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      pName
      residenceID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncPlaces(
  $filter: ModelPlaceFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncPlaces(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      pName
      residenceID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetContainer($id: ID!) {
  getContainer(id: $id) {
    id
    cName
    Items {
      nextToken
      startedAt
    }
    placeID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListContainers(
  $filter: ModelContainerFilterInput
  $limit: Int
  $nextToken: String
) {
  listContainers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      cName
      placeID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncContainers(
  $filter: ModelContainerFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncContainers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      cName
      placeID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetItem($id: ID!) {
  getItem(id: $id) {
    id
    description
    iName
    photo
    containerID
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListItems(
  $filter: ModelItemFilterInput
  $limit: Int
  $nextToken: String
) {
  listItems(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      description
      iName
      photo
      containerID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncItems(
  $filter: ModelItemFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncItems(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      description
      iName
      photo
      containerID
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
